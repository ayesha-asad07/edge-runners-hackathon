import tensorflow as tf
import pickle
import numpy as np

def load_data(filename):
    with open(filename, 'r') as file:
        data = file.readlines()
    return data

def preprocess_data(data):
    processed_data = [line.strip() for line in data]

    X = []
    y = []
    for line in processed_data:
        parts = line.split(',')
        features = [float(part) for part in parts[:-1]]
        label = int(parts[-1])
        X.append(features)
        y.append(label)
    
    return np.array(X), np.array(y)

def build_model(input_dim):
    model = tf.keras.Sequential([
        tf.keras.layers.Input(shape=(input_dim,)),
        tf.keras.layers.Dense(64, activation='relu'),
        tf.keras.layers.Dense(1, activation='sigmoid')
    ])
    
    model.compile(optimizer='adam',
                  loss='binary_crossentropy',
                  metrics=['accuracy'])
    return model

def train_model(model, X_train, y_train, epochs=5, batch_size=32):
    model.fit(X_train, y_train, epochs=epochs, batch_size=batch_size)
    return model

def save_model(model, filename):
    model.save(filename)

def main():
    data = load_data('malware_data.txt')
    X_train, y_train = preprocess_data(data)
    
    input_dim = X_train.shape[1]
    model = build_model(input_dim)
    model = train_model(model, X_train, y_train)
    
    save_model(model, 'phi3_model')

if __name__ == "__main__":
    main()
